/** 
 *  DONATIONS HUFF EXERCISE
 *  
 *  The task is to Implement solidity's "receive" functionality which allows sending ether to a smart contract without any calldata
 *  also have a getter function that returns how much an address has donated. Addresses can donate several times
 */

#define function donated(address) payable returns(uint256)

#define macro DONATED() = takes(1) returns(1) {

    0x00 mstore
    0x20 0x00 sha3 sload

}

#define macro MAIN() = takes(0) returns(0) {

    0x00 calldataload
    0xE0 shr

    __FUNC_SIG(donated) eq
    donated jumpi

    caller 0x00 mstore
    0x20 0x00 sha3 dup1 sload
    callvalue add
    swap1 sstore

    donated:
        0x04 calldataload
        DONATED()
        0x00 mstore
        0x20 0x00 return
}
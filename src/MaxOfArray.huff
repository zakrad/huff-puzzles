
/** 
 *  MAX_OF_ARRAY HUFF EXERCISE
 *  
 *  In this task, Given an abi encoded array of uint256, return its maximum value. Revert if the array is empty.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function maxOfArray(uint256[]) payable returns(uint256)

#define macro MAX() = takes (2) returns (1) {
    // input stack:     // [num1, num2]
    dup2                // [num2, num1, num2]
    dup2                // [num1, num2, num1, num2]
    lt                  // [is_less_than, num1, num2]

    less_than jumpi
    swap1               // [num1, num2]

    less_than:
    pop                 // [max(num2, num1)]
}

#define macro MAXOFARRAY() = takes(0) returns(1) {

    0x24 calldataload 0x00 eq   // return zero for empty array
    revertfunc jumpi 

    0x44 0x24                   // [0x24, 0x44]
    calldataload                // [length, offset]
      
    0x00                        // [index(0), length, offset]

    start jump
    continue:
        // if index == length end
        eq 
        end jumpi                   // [index(i), length, offset]
        start:
            // load from calldata
            dup1 0x20 mul                    // [index(i), index(i), length, offset]
            dup4 add                         // [index(i)+offset, index(i), length, offset]
            calldataload                     // [array(i), index(i), length, offset]
            // update memory
            0x00 mload
            MAX()                             // [index(i), length, offset]
            0x00 mstore
            // add to index
            0x01 add                          // [index(i+1), length, offset]
            dup2 dup2                         // [index(i+1), length, index(i+1), length, offset]

            continue jump
    end:
        // pop pop pop
        0x20 0x00 return
        
    revertfunc:
        0x00 0x00 revert
}


#define macro MAIN() = takes(0) returns(0) {

    0x00 calldataload
    0xE0 shr

    __FUNC_SIG(maxOfArray) eq
    maxOfArray jumpi

    0x00 0x00 revert

    maxOfArray:
        MAXOFARRAY()
        0x00 mstore
        0x20 0x00 return

}
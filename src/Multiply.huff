
/** 
 *  MULTIPLY HUFF EXERCISE
 *
 *  When writing solidity, we most times have to perform some mathematical operations like multiplication etc
 *  
 *  The task is to write within the `MAIN` macro below, a function named `multiply` that takes in 2 uint256s, and returns their product. Be sure to revert on overflow
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function multiply(uint256, uint256) payable returns(uint256)

#define macro MULTIPLY() = takes(2) returns(1) {

    dup2 dup2 mul
    0x00 mstore
    0x00 mload
    div
    eq
    ret jumpi

    0x00 0x00 revert

    ret:
        0x20 0x00 return
}

#define macro MAIN() = takes(0) returns(0) {

    0x00 calldataload
    0xE0 shr

    __FUNC_SIG(multiply)
    eq
    multiply jumpi

    0x00 0x00 revert

    multiply:
        0x04 calldataload
        0x24 calldataload
        MULTIPLY()
        0x00 mstore
        0x20 0x00 return

}